<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="614" onload="init(evt)" viewBox="0 0 1200 614" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="597"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="597"> </text>
<g id="frames">
<g>
<title>all (860 samples, 100.00%)</title><rect x="10.0" y="563.0" width="1180.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="13.0" y="574.0">all</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (853 samples, 99.19%)</title><rect x="10.0" y="547.0" width="1170.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="558.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (5 samples, 0.58%)</title><rect x="10.0" y="531.0" width="6.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="542.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (1 samples, 0.12%)</title><rect x="10.0" y="515.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (1 samples, 0.12%)</title><rect x="10.0" y="499.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="510.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1 samples, 0.12%)</title><rect x="10.0" y="483.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1 samples, 0.12%)</title><rect x="10.0" y="467.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="478.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (1 samples, 0.12%)</title><rect x="10.0" y="451.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (1 samples, 0.12%)</title><rect x="10.0" y="435.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="446.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.12%)</title><rect x="10.0" y="419.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="13.0" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (4 samples, 0.47%)</title><rect x="11.4" y="515.0" width="5.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="14.4" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (4 samples, 0.47%)</title><rect x="11.4" y="499.0" width="5.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="14.4" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (4 samples, 0.47%)</title><rect x="11.4" y="483.0" width="5.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="14.4" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (4 samples, 0.47%)</title><rect x="11.4" y="467.0" width="5.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="14.4" y="478.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_KQueue_poll (1 samples, 0.12%)</title><rect x="12.7" y="451.0" width="1.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="15.7" y="462.0"></text>
</g>
<g>
<title>kevent (2 samples, 0.23%)</title><rect x="14.1" y="451.0" width="2.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="17.1" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (848 samples, 98.60%)</title><rect x="16.9" y="531.0" width="1163.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="19.9" y="542.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (847 samples, 98.49%)</title><rect x="18.2" y="515.0" width="1162.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="21.2" y="526.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (842 samples, 97.91%)</title><rect x="18.2" y="499.0" width="1155.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="21.2" y="510.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (840 samples, 97.67%)</title><rect x="19.6" y="483.0" width="1152.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="22.6" y="494.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (840 samples, 97.67%)</title><rect x="19.6" y="467.0" width="1152.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="22.6" y="478.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler1_getValue.handleRequest (839 samples, 97.56%)</title><rect x="19.6" y="451.0" width="1151.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="22.6" y="462.0">RequestHandler1_getValue.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (8 samples, 0.93%)</title><rect x="19.6" y="435.0" width="11.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="22.6" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (8 samples, 0.93%)</title><rect x="19.6" y="419.0" width="11.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="22.6" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.12%)</title><rect x="19.6" y="403.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="22.6" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (7 samples, 0.81%)</title><rect x="21.0" y="403.0" width="9.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="24.0" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (7 samples, 0.81%)</title><rect x="21.0" y="387.0" width="9.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="24.0" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (7 samples, 0.81%)</title><rect x="21.0" y="371.0" width="9.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="24.0" y="382.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (7 samples, 0.81%)</title><rect x="21.0" y="355.0" width="9.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="24.0" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (7 samples, 0.81%)</title><rect x="21.0" y="339.0" width="9.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="24.0" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (7 samples, 0.81%)</title><rect x="21.0" y="323.0" width="9.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="24.0" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (7 samples, 0.81%)</title><rect x="21.0" y="307.0" width="9.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="24.0" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (6 samples, 0.70%)</title><rect x="21.0" y="291.0" width="8.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="24.0" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (6 samples, 0.70%)</title><rect x="21.0" y="275.0" width="8.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="24.0" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (6 samples, 0.70%)</title><rect x="21.0" y="259.0" width="8.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="24.0" y="270.0"></text>
</g>
<g>
<title>write (6 samples, 0.70%)</title><rect x="21.0" y="243.0" width="8.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="24.0" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.12%)</title><rect x="29.2" y="291.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="32.2" y="302.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.12%)</title><rect x="29.2" y="275.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="32.2" y="286.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.12%)</title><rect x="29.2" y="259.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="32.2" y="270.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.12%)</title><rect x="29.2" y="243.0" width="1.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="32.2" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (3 samples, 0.35%)</title><rect x="30.6" y="435.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="33.6" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3 samples, 0.35%)</title><rect x="30.6" y="419.0" width="4.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="33.6" y="430.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.12%)</title><rect x="30.6" y="403.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="33.6" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.12%)</title><rect x="30.6" y="387.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="33.6" y="398.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.12%)</title><rect x="32.0" y="403.0" width="1.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="35.0" y="414.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.12%)</title><rect x="33.3" y="403.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="36.3" y="414.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.12%)</title><rect x="33.3" y="387.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="36.3" y="398.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.12%)</title><rect x="33.3" y="371.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="36.3" y="382.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.12%)</title><rect x="33.3" y="355.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="36.3" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/jhoysbou/LsmServer.getValue (828 samples, 96.28%)</title><rect x="34.7" y="435.0" width="1136.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="37.7" y="446.0">ru/mail/polis/service/jhoysbou/LsmServer.getValue</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (828 samples, 96.28%)</title><rect x="34.7" y="419.0" width="1136.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="37.7" y="430.0">ru/mail/polis/dao/DAO.get</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (6 samples, 0.70%)</title><rect x="34.7" y="403.0" width="8.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="37.7" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (6 samples, 0.70%)</title><rect x="34.7" y="387.0" width="8.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="37.7" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (6 samples, 0.70%)</title><rect x="34.7" y="371.0" width="8.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="37.7" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (6 samples, 0.70%)</title><rect x="34.7" y="355.0" width="8.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="37.7" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (6 samples, 0.70%)</title><rect x="34.7" y="339.0" width="8.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="37.7" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (6 samples, 0.70%)</title><rect x="34.7" y="323.0" width="8.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="37.7" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (6 samples, 0.70%)</title><rect x="34.7" y="307.0" width="8.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="37.7" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (6 samples, 0.70%)</title><rect x="34.7" y="291.0" width="8.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="37.7" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (6 samples, 0.70%)</title><rect x="34.7" y="275.0" width="8.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="37.7" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (6 samples, 0.70%)</title><rect x="34.7" y="259.0" width="8.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="37.7" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6 samples, 0.70%)</title><rect x="34.7" y="243.0" width="8.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="37.7" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6 samples, 0.70%)</title><rect x="34.7" y="227.0" width="8.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="37.7" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (6 samples, 0.70%)</title><rect x="34.7" y="211.0" width="8.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="37.7" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/jhoysbou/SSTable$1.next (6 samples, 0.70%)</title><rect x="34.7" y="195.0" width="8.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="37.7" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/jhoysbou/SSTable$1.next (6 samples, 0.70%)</title><rect x="34.7" y="179.0" width="8.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="37.7" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/jhoysbou/SSTable.getCell (6 samples, 0.70%)</title><rect x="34.7" y="163.0" width="8.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="37.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/jhoysbou/SSTable.getKey (3 samples, 0.35%)</title><rect x="34.7" y="147.0" width="4.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="37.7" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (3 samples, 0.35%)</title><rect x="34.7" y="131.0" width="4.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="37.7" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (3 samples, 0.35%)</title><rect x="34.7" y="115.0" width="4.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="37.7" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (3 samples, 0.35%)</title><rect x="34.7" y="99.0" width="4.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="37.7" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (3 samples, 0.35%)</title><rect x="34.7" y="83.0" width="4.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="37.7" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (3 samples, 0.35%)</title><rect x="34.7" y="67.0" width="4.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="37.7" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (3 samples, 0.35%)</title><rect x="34.7" y="51.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="37.7" y="62.0"></text>
</g>
<g>
<title>rcmd_af.canonnamebuf (3 samples, 0.35%)</title><rect x="34.7" y="35.0" width="4.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="37.7" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/jhoysbou/SSTable.getOffset (3 samples, 0.35%)</title><rect x="38.8" y="147.0" width="4.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="41.8" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (3 samples, 0.35%)</title><rect x="38.8" y="131.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="41.8" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (3 samples, 0.35%)</title><rect x="38.8" y="115.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="41.8" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (3 samples, 0.35%)</title><rect x="38.8" y="99.0" width="4.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="41.8" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (3 samples, 0.35%)</title><rect x="38.8" y="83.0" width="4.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="41.8" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (3 samples, 0.35%)</title><rect x="38.8" y="67.0" width="4.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="41.8" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (3 samples, 0.35%)</title><rect x="38.8" y="51.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="41.8" y="62.0"></text>
</g>
<g>
<title>rcmd_af.canonnamebuf (3 samples, 0.35%)</title><rect x="38.8" y="35.0" width="4.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="41.8" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/jhoysbou/LsmDao.iterator (822 samples, 95.58%)</title><rect x="42.9" y="403.0" width="1127.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="45.9" y="414.0">ru/mail/polis/dao/jhoysbou/LsmDao.iterator</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (49 samples, 5.70%)</title><rect x="42.9" y="387.0" width="67.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="45.9" y="398.0">com/goo..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (49 samples, 5.70%)</title><rect x="42.9" y="371.0" width="67.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="45.9" y="382.0">com/goo..</text>
</g>
<g>
<title>java/util/PriorityQueue.add (36 samples, 4.19%)</title><rect x="44.3" y="355.0" width="49.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="47.3" y="366.0">java/..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (36 samples, 4.19%)</title><rect x="44.3" y="339.0" width="49.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="47.3" y="350.0">java/..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (36 samples, 4.19%)</title><rect x="44.3" y="323.0" width="49.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="47.3" y="334.0">java/..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (36 samples, 4.19%)</title><rect x="44.3" y="307.0" width="49.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="47.3" y="318.0">java/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (36 samples, 4.19%)</title><rect x="44.3" y="291.0" width="49.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="47.3" y="302.0">com/g..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (36 samples, 4.19%)</title><rect x="44.3" y="275.0" width="49.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="47.3" y="286.0">com/g..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (35 samples, 4.07%)</title><rect x="44.3" y="259.0" width="48.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="47.3" y="270.0">com/..</text>
</g>
<g>
<title>ru/mail/polis/dao/jhoysbou/SSTable$1.next (35 samples, 4.07%)</title><rect x="44.3" y="243.0" width="48.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="47.3" y="254.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/jhoysbou/SSTable$1.next (35 samples, 4.07%)</title><rect x="44.3" y="227.0" width="48.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="47.3" y="238.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/jhoysbou/SSTable.getCell (35 samples, 4.07%)</title><rect x="44.3" y="211.0" width="48.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="47.3" y="222.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/jhoysbou/SSTable.getKey (19 samples, 2.21%)</title><rect x="45.7" y="195.0" width="26.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="48.7" y="206.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/jhoysbou/SSTable.getOffset (5 samples, 0.58%)</title><rect x="45.7" y="179.0" width="6.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="48.7" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (5 samples, 0.58%)</title><rect x="45.7" y="163.0" width="6.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="48.7" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (5 samples, 0.58%)</title><rect x="45.7" y="147.0" width="6.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="48.7" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (5 samples, 0.58%)</title><rect x="45.7" y="131.0" width="6.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="48.7" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (5 samples, 0.58%)</title><rect x="45.7" y="115.0" width="6.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="48.7" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (5 samples, 0.58%)</title><rect x="45.7" y="99.0" width="6.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="48.7" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (5 samples, 0.58%)</title><rect x="45.7" y="83.0" width="6.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="48.7" y="94.0"></text>
</g>
<g>
<title>rcmd_af.canonnamebuf (5 samples, 0.58%)</title><rect x="45.7" y="67.0" width="6.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="48.7" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (14 samples, 1.63%)</title><rect x="52.5" y="179.0" width="19.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="55.5" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (14 samples, 1.63%)</title><rect x="52.5" y="163.0" width="19.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="55.5" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (13 samples, 1.51%)</title><rect x="52.5" y="147.0" width="17.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="55.5" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (13 samples, 1.51%)</title><rect x="52.5" y="131.0" width="17.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="55.5" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (12 samples, 1.40%)</title><rect x="52.5" y="115.0" width="16.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="55.5" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (12 samples, 1.40%)</title><rect x="52.5" y="99.0" width="16.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="55.5" y="110.0"></text>
</g>
<g>
<title>rcmd_af.canonnamebuf (12 samples, 1.40%)</title><rect x="52.5" y="83.0" width="16.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="55.5" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (1 samples, 0.12%)</title><rect x="69.0" y="115.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="72.0" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1 samples, 0.12%)</title><rect x="70.4" y="147.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="73.4" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/jhoysbou/SSTable.getOffset (6 samples, 0.70%)</title><rect x="71.7" y="195.0" width="8.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="74.7" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.12%)</title><rect x="71.7" y="179.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="74.7" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.12%)</title><rect x="71.7" y="163.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="74.7" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (5 samples, 0.58%)</title><rect x="73.1" y="179.0" width="6.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="76.1" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (5 samples, 0.58%)</title><rect x="73.1" y="163.0" width="6.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="76.1" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (5 samples, 0.58%)</title><rect x="73.1" y="147.0" width="6.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="76.1" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (5 samples, 0.58%)</title><rect x="73.1" y="131.0" width="6.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="76.1" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (5 samples, 0.58%)</title><rect x="73.1" y="115.0" width="6.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="76.1" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (5 samples, 0.58%)</title><rect x="73.1" y="99.0" width="6.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="76.1" y="110.0"></text>
</g>
<g>
<title>rcmd_af.canonnamebuf (5 samples, 0.58%)</title><rect x="73.1" y="83.0" width="6.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="76.1" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (9 samples, 1.05%)</title><rect x="80.0" y="195.0" width="12.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="83.0" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (9 samples, 1.05%)</title><rect x="80.0" y="179.0" width="12.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="83.0" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (8 samples, 0.93%)</title><rect x="80.0" y="163.0" width="11.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="83.0" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (8 samples, 0.93%)</title><rect x="80.0" y="147.0" width="11.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="83.0" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (8 samples, 0.93%)</title><rect x="80.0" y="131.0" width="11.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="83.0" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (8 samples, 0.93%)</title><rect x="80.0" y="115.0" width="11.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="83.0" y="126.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.12%)</title><rect x="80.0" y="99.0" width="1.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="83.0" y="110.0"></text>
</g>
<g>
<title>rcmd_af.canonnamebuf (7 samples, 0.81%)</title><rect x="81.3" y="99.0" width="9.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="84.3" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1 samples, 0.12%)</title><rect x="91.0" y="163.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="94.0" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$70/463305933.compare (1 samples, 0.12%)</title><rect x="92.3" y="259.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="95.3" y="270.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1 samples, 0.12%)</title><rect x="92.3" y="243.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="95.3" y="254.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$68/276612973.compare (1 samples, 0.12%)</title><rect x="92.3" y="227.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="95.3" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (1 samples, 0.12%)</title><rect x="92.3" y="211.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="95.3" y="222.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (12 samples, 1.40%)</title><rect x="93.7" y="355.0" width="16.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="96.7" y="366.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (12 samples, 1.40%)</title><rect x="93.7" y="339.0" width="16.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="96.7" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (12 samples, 1.40%)</title><rect x="93.7" y="323.0" width="16.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="96.7" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterator.getExactSizeIfKnown (11 samples, 1.28%)</title><rect x="93.7" y="307.0" width="15.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="96.7" y="318.0"></text>
</g>
<g>
<title>java/util/Spliterators$IteratorSpliterator.estimateSize (11 samples, 1.28%)</title><rect x="93.7" y="291.0" width="15.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="96.7" y="302.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$EntrySetView.size (11 samples, 1.28%)</title><rect x="93.7" y="275.0" width="15.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="96.7" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapEntryIterator.next (10 samples, 1.16%)</title><rect x="95.1" y="259.0" width="13.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="98.1" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapEntryIterator.next (10 samples, 1.16%)</title><rect x="95.1" y="243.0" width="13.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="98.1" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapIterator.nextEntry (10 samples, 1.16%)</title><rect x="95.1" y="227.0" width="13.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="98.1" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (9 samples, 1.05%)</title><rect x="96.4" y="211.0" width="12.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="99.4" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (1 samples, 0.12%)</title><rect x="108.8" y="307.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="111.8" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$66/1796733266.getAsBoolean (1 samples, 0.12%)</title><rect x="108.8" y="291.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="111.8" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (1 samples, 0.12%)</title><rect x="108.8" y="275.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="111.8" y="286.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (761 samples, 88.49%)</title><rect x="110.2" y="387.0" width="1044.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="113.2" y="398.0">java/lang/Iterable.forEach</text>
</g>
<g>
<title>ru/mail/polis/dao/jhoysbou/LsmDao$$Lambda$71/742278395.accept (761 samples, 88.49%)</title><rect x="110.2" y="371.0" width="1044.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="113.2" y="382.0">ru/mail/polis/dao/jhoysbou/LsmDao$$Lambda$71/742278395.accept</text>
</g>
<g>
<title>ru/mail/polis/dao/jhoysbou/LsmDao.lambda$iterator$2 (761 samples, 88.49%)</title><rect x="110.2" y="355.0" width="1044.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="113.2" y="366.0">ru/mail/polis/dao/jhoysbou/LsmDao.lambda$iterator$2</text>
</g>
<g>
<title>ru/mail/polis/dao/jhoysbou/SSTable.iterator (761 samples, 88.49%)</title><rect x="110.2" y="339.0" width="1044.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="113.2" y="350.0">ru/mail/polis/dao/jhoysbou/SSTable.iterator</text>
</g>
<g>
<title>ru/mail/polis/dao/jhoysbou/SSTable$1.&lt;init&gt; (761 samples, 88.49%)</title><rect x="110.2" y="323.0" width="1044.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="113.2" y="334.0">ru/mail/polis/dao/jhoysbou/SSTable$1.&lt;init&gt;</text>
</g>
<g>
<title>ru/mail/polis/dao/jhoysbou/SSTable.binarySearch (761 samples, 88.49%)</title><rect x="110.2" y="307.0" width="1044.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="113.2" y="318.0">ru/mail/polis/dao/jhoysbou/SSTable.binarySearch</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.23%)</title><rect x="110.2" y="291.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="113.2" y="302.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.23%)</title><rect x="110.2" y="275.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="113.2" y="286.0"></text>
</g>
<g>
<title>vectorizedMismatch (1 samples, 0.12%)</title><rect x="111.5" y="259.0" width="1.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="114.5" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/jhoysbou/SSTable.getKey (759 samples, 88.26%)</title><rect x="112.9" y="291.0" width="1041.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="115.9" y="302.0">ru/mail/polis/dao/jhoysbou/SSTable.getKey</text>
</g>
<g>
<title>ru/mail/polis/dao/jhoysbou/SSTable.getOffset (272 samples, 31.63%)</title><rect x="112.9" y="275.0" width="373.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="115.9" y="286.0">ru/mail/polis/dao/jhoysbou/SSTable.getOffset</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (272 samples, 31.63%)</title><rect x="112.9" y="259.0" width="373.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="115.9" y="270.0">sun/nio/ch/FileChannelImpl.read</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (272 samples, 31.63%)</title><rect x="112.9" y="243.0" width="373.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="115.9" y="254.0">sun/nio/ch/FileChannelImpl.readInternal</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (1 samples, 0.12%)</title><rect x="114.3" y="227.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="117.3" y="238.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.12%)</title><rect x="114.3" y="211.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="117.3" y="222.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.12%)</title><rect x="114.3" y="195.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="117.3" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (2 samples, 0.23%)</title><rect x="115.7" y="227.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="118.7" y="238.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (2 samples, 0.23%)</title><rect x="115.7" y="211.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="118.7" y="222.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.23%)</title><rect x="115.7" y="195.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="118.7" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (249 samples, 28.95%)</title><rect x="118.4" y="227.0" width="341.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="121.4" y="238.0">sun/nio/ch/IOUtil.read</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (2 samples, 0.23%)</title><rect x="118.4" y="211.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="121.4" y="222.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (2 samples, 0.23%)</title><rect x="118.4" y="195.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="121.4" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (2 samples, 0.23%)</title><rect x="118.4" y="179.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="121.4" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.12%)</title><rect x="119.8" y="163.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="122.8" y="174.0"></text>
</g>
<g>
<title>java/nio/Buffer.nextGetIndex (1 samples, 0.12%)</title><rect x="119.8" y="147.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="122.8" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (246 samples, 28.60%)</title><rect x="121.1" y="211.0" width="337.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="124.1" y="222.0">sun/nio/ch/IOUtil.readIntoNativeBuffer</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (241 samples, 28.02%)</title><rect x="121.1" y="195.0" width="330.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="124.1" y="206.0">sun/nio/ch/FileDispatcherImpl.pread</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (234 samples, 27.21%)</title><rect x="130.7" y="179.0" width="321.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="133.7" y="190.0">sun/nio/ch/FileDispatcherImpl.pread0</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (1 samples, 0.12%)</title><rect x="136.2" y="163.0" width="1.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="139.2" y="174.0"></text>
</g>
<g>
<title>convertReturnVal (1 samples, 0.12%)</title><rect x="137.6" y="163.0" width="1.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="140.6" y="174.0"></text>
</g>
<g>
<title>rcmd_af.canonnamebuf (228 samples, 26.51%)</title><rect x="139.0" y="163.0" width="312.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="142.0" y="174.0">rcmd_af.canonnamebuf</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (5 samples, 0.58%)</title><rect x="451.8" y="195.0" width="6.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="454.8" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.12%)</title><rect x="458.7" y="211.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="461.7" y="222.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.12%)</title><rect x="458.7" y="195.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="461.7" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.12%)</title><rect x="458.7" y="179.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="461.7" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (15 samples, 1.74%)</title><rect x="460.0" y="227.0" width="20.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="463.0" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (5 samples, 0.58%)</title><rect x="473.8" y="211.0" width="6.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="476.8" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (4 samples, 0.47%)</title><rect x="480.6" y="227.0" width="5.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="483.6" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (487 samples, 56.63%)</title><rect x="486.1" y="275.0" width="668.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="489.1" y="286.0">sun/nio/ch/FileChannelImpl.read</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (487 samples, 56.63%)</title><rect x="486.1" y="259.0" width="668.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="489.1" y="270.0">sun/nio/ch/FileChannelImpl.readInternal</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (1 samples, 0.12%)</title><rect x="488.9" y="243.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="491.9" y="254.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (1 samples, 0.12%)</title><rect x="488.9" y="227.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="491.9" y="238.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.12%)</title><rect x="488.9" y="211.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="491.9" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (448 samples, 52.09%)</title><rect x="490.2" y="243.0" width="614.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="493.2" y="254.0">sun/nio/ch/IOUtil.read</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (448 samples, 52.09%)</title><rect x="490.2" y="227.0" width="614.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="493.2" y="238.0">sun/nio/ch/IOUtil.readIntoNativeBuffer</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (437 samples, 50.81%)</title><rect x="490.2" y="211.0" width="599.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="493.2" y="222.0">sun/nio/ch/FileDispatcherImpl.pread</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (429 samples, 49.88%)</title><rect x="501.2" y="195.0" width="588.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="504.2" y="206.0">sun/nio/ch/FileDispatcherImpl.pread0</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (2 samples, 0.23%)</title><rect x="504.0" y="179.0" width="2.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="507.0" y="190.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.12%)</title><rect x="506.7" y="179.0" width="1.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="509.7" y="190.0"></text>
</g>
<g>
<title>rcmd_af.canonnamebuf (424 samples, 49.30%)</title><rect x="508.1" y="179.0" width="581.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="511.1" y="190.0">rcmd_af.canonnamebuf</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (11 samples, 1.28%)</title><rect x="1089.8" y="211.0" width="15.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1092.8" y="222.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.12%)</title><rect x="1103.6" y="195.0" width="1.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1106.6" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (28 samples, 3.26%)</title><rect x="1104.9" y="243.0" width="38.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1107.9" y="254.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (9 samples, 1.05%)</title><rect x="1131.0" y="227.0" width="12.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1134.0" y="238.0"></text>
</g>
<g>
<title>pthread_self (1 samples, 0.12%)</title><rect x="1142.0" y="211.0" width="1.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1145.0" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (8 samples, 0.93%)</title><rect x="1143.3" y="243.0" width="11.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1146.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (12 samples, 1.40%)</title><rect x="1154.3" y="387.0" width="16.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1157.3" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (12 samples, 1.40%)</title><rect x="1154.3" y="371.0" width="16.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1157.3" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (12 samples, 1.40%)</title><rect x="1154.3" y="355.0" width="16.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1157.3" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (12 samples, 1.40%)</title><rect x="1154.3" y="339.0" width="16.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1157.3" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (12 samples, 1.40%)</title><rect x="1154.3" y="323.0" width="16.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1157.3" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (12 samples, 1.40%)</title><rect x="1154.3" y="307.0" width="16.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1157.3" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (12 samples, 1.40%)</title><rect x="1154.3" y="291.0" width="16.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1157.3" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (12 samples, 1.40%)</title><rect x="1154.3" y="275.0" width="16.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1157.3" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (12 samples, 1.40%)</title><rect x="1154.3" y="259.0" width="16.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1157.3" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (12 samples, 1.40%)</title><rect x="1154.3" y="243.0" width="16.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1157.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/jhoysbou/SSTable$1.next (12 samples, 1.40%)</title><rect x="1154.3" y="227.0" width="16.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1157.3" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/jhoysbou/SSTable$1.next (12 samples, 1.40%)</title><rect x="1154.3" y="211.0" width="16.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1157.3" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/jhoysbou/SSTable.getCell (12 samples, 1.40%)</title><rect x="1154.3" y="195.0" width="16.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1157.3" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/jhoysbou/SSTable.getKey (4 samples, 0.47%)</title><rect x="1154.3" y="179.0" width="5.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1157.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/jhoysbou/SSTable.getOffset (2 samples, 0.23%)</title><rect x="1154.3" y="163.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1157.3" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (2 samples, 0.23%)</title><rect x="1154.3" y="147.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1157.3" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (2 samples, 0.23%)</title><rect x="1154.3" y="131.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1157.3" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (2 samples, 0.23%)</title><rect x="1154.3" y="115.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1157.3" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (2 samples, 0.23%)</title><rect x="1154.3" y="99.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1157.3" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (2 samples, 0.23%)</title><rect x="1154.3" y="83.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1157.3" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (2 samples, 0.23%)</title><rect x="1154.3" y="67.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1157.3" y="78.0"></text>
</g>
<g>
<title>rcmd_af.canonnamebuf (2 samples, 0.23%)</title><rect x="1154.3" y="51.0" width="2.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1157.3" y="62.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (2 samples, 0.23%)</title><rect x="1157.1" y="163.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1160.1" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (2 samples, 0.23%)</title><rect x="1157.1" y="147.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1160.1" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1 samples, 0.12%)</title><rect x="1157.1" y="131.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1160.1" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (1 samples, 0.12%)</title><rect x="1157.1" y="115.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1160.1" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (1 samples, 0.12%)</title><rect x="1157.1" y="99.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1160.1" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1 samples, 0.12%)</title><rect x="1158.4" y="131.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1161.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/jhoysbou/SSTable.getOffset (1 samples, 0.12%)</title><rect x="1159.8" y="179.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1162.8" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (1 samples, 0.12%)</title><rect x="1159.8" y="163.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1162.8" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (1 samples, 0.12%)</title><rect x="1159.8" y="147.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1162.8" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1 samples, 0.12%)</title><rect x="1159.8" y="131.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1162.8" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (1 samples, 0.12%)</title><rect x="1159.8" y="115.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1162.8" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (1 samples, 0.12%)</title><rect x="1159.8" y="99.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1162.8" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.12%)</title><rect x="1159.8" y="83.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1162.8" y="94.0"></text>
</g>
<g>
<title>rcmd_af.canonnamebuf (1 samples, 0.12%)</title><rect x="1159.8" y="67.0" width="1.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1162.8" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (7 samples, 0.81%)</title><rect x="1161.2" y="179.0" width="9.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1164.2" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (7 samples, 0.81%)</title><rect x="1161.2" y="163.0" width="9.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1164.2" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (7 samples, 0.81%)</title><rect x="1161.2" y="147.0" width="9.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1164.2" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (7 samples, 0.81%)</title><rect x="1161.2" y="131.0" width="9.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1164.2" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (6 samples, 0.70%)</title><rect x="1161.2" y="115.0" width="8.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1164.2" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (6 samples, 0.70%)</title><rect x="1161.2" y="99.0" width="8.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1164.2" y="110.0"></text>
</g>
<g>
<title>rcmd_af.canonnamebuf (6 samples, 0.70%)</title><rect x="1161.2" y="83.0" width="8.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1164.2" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (1 samples, 0.12%)</title><rect x="1169.4" y="115.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1172.4" y="126.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.12%)</title><rect x="1170.8" y="451.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1173.8" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.12%)</title><rect x="1170.8" y="435.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1173.8" y="446.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.12%)</title><rect x="1170.8" y="419.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1173.8" y="430.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.12%)</title><rect x="1170.8" y="403.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1173.8" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.12%)</title><rect x="1170.8" y="387.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1173.8" y="398.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.12%)</title><rect x="1170.8" y="371.0" width="1.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1173.8" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.12%)</title><rect x="1172.2" y="483.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1175.2" y="494.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.12%)</title><rect x="1172.2" y="467.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1175.2" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.12%)</title><rect x="1172.2" y="451.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1175.2" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (5 samples, 0.58%)</title><rect x="1173.5" y="499.0" width="6.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1176.5" y="510.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (5 samples, 0.58%)</title><rect x="1173.5" y="483.0" width="6.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1176.5" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (5 samples, 0.58%)</title><rect x="1173.5" y="467.0" width="6.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1176.5" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (5 samples, 0.58%)</title><rect x="1173.5" y="451.0" width="6.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1176.5" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (5 samples, 0.58%)</title><rect x="1173.5" y="435.0" width="6.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1176.5" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (5 samples, 0.58%)</title><rect x="1173.5" y="419.0" width="6.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1176.5" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (5 samples, 0.58%)</title><rect x="1173.5" y="403.0" width="6.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1176.5" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (5 samples, 0.58%)</title><rect x="1173.5" y="387.0" width="6.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1176.5" y="398.0"></text>
</g>
<g>
<title>rpc_errlist (5 samples, 0.58%)</title><rect x="1173.5" y="371.0" width="6.9" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1176.5" y="382.0"></text>
</g>
<g>
<title>thread_start (7 samples, 0.81%)</title><rect x="1180.4" y="547.0" width="9.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1183.4" y="558.0"></text>
</g>
<g>
<title>_pthread_start (7 samples, 0.81%)</title><rect x="1180.4" y="531.0" width="9.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1183.4" y="542.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (7 samples, 0.81%)</title><rect x="1180.4" y="515.0" width="9.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1183.4" y="526.0"></text>
</g>
<g>
<title>Thread::call_run() (7 samples, 0.81%)</title><rect x="1180.4" y="499.0" width="9.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1183.4" y="510.0"></text>
</g>
<g>
<title>ConcurrentGCThread::run() (2 samples, 0.23%)</title><rect x="1180.4" y="483.0" width="2.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1183.4" y="494.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::run_service() (2 samples, 0.23%)</title><rect x="1180.4" y="467.0" width="2.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1183.4" y="478.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::sample_young_list_rs_lengths() (2 samples, 0.23%)</title><rect x="1180.4" y="451.0" width="2.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1183.4" y="462.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (2 samples, 0.23%)</title><rect x="1180.4" y="435.0" width="2.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1183.4" y="446.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingClosure::do_heap_region(HeapRegion*) (2 samples, 0.23%)</title><rect x="1180.4" y="419.0" width="2.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1183.4" y="430.0"></text>
</g>
<g>
<title>G1CollectionSet::update_young_region_prediction(HeapRegion*, unsigned long) (1 samples, 0.12%)</title><rect x="1180.4" y="403.0" width="1.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1183.4" y="414.0"></text>
</g>
<g>
<title>G1Policy::predict_region_elapsed_time_ms(HeapRegion*, bool) const (1 samples, 0.12%)</title><rect x="1180.4" y="387.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1183.4" y="398.0"></text>
</g>
<g>
<title>G1Analytics::predict_card_num(unsigned long, bool) const (1 samples, 0.12%)</title><rect x="1180.4" y="371.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1183.4" y="382.0"></text>
</g>
<g>
<title>OtherRegionsTable::occupied() const (1 samples, 0.12%)</title><rect x="1181.8" y="403.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1184.8" y="414.0"></text>
</g>
<g>
<title>OtherRegionsTable::occ_fine() const (1 samples, 0.12%)</title><rect x="1181.8" y="387.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1184.8" y="398.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.12%)</title><rect x="1183.1" y="483.0" width="1.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1186.1" y="494.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (1 samples, 0.12%)</title><rect x="1183.1" y="467.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1186.1" y="478.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (1 samples, 0.12%)</title><rect x="1183.1" y="451.0" width="1.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1186.1" y="462.0"></text>
</g>
<g>
<title>JavaThread::nmethods_do(CodeBlobClosure*) (1 samples, 0.12%)</title><rect x="1183.1" y="435.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1186.1" y="446.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.12%)</title><rect x="1183.1" y="419.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1186.1" y="430.0"></text>
</g>
<g>
<title>frame::sender_for_compiled_frame(RegisterMap*) const (1 samples, 0.12%)</title><rect x="1183.1" y="403.0" width="1.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1186.1" y="414.0"></text>
</g>
<g>
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (1 samples, 0.12%)</title><rect x="1183.1" y="387.0" width="1.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1186.1" y="398.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (2 samples, 0.23%)</title><rect x="1184.5" y="483.0" width="2.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1187.5" y="494.0"></text>
</g>
<g>
<title>attach_listener_thread_entry(JavaThread*, Thread*) (2 samples, 0.23%)</title><rect x="1184.5" y="467.0" width="2.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1187.5" y="478.0"></text>
</g>
<g>
<title>load_agent(AttachOperation*, outputStream*) (2 samples, 0.23%)</title><rect x="1184.5" y="451.0" width="2.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1187.5" y="462.0"></text>
</g>
<g>
<title>JvmtiExport::load_agent_library(char const*, char const*, char const*, outputStream*) (2 samples, 0.23%)</title><rect x="1184.5" y="435.0" width="2.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1187.5" y="446.0"></text>
</g>
<g>
<title>os::dll_load(char const*, char*, int) (1 samples, 0.12%)</title><rect x="1184.5" y="419.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1187.5" y="430.0"></text>
</g>
<g>
<title>_dispatch_queue_attr_concurrent (1 samples, 0.12%)</title><rect x="1184.5" y="403.0" width="1.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1187.5" y="414.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.12%)</title><rect x="1184.5" y="387.0" width="1.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1187.5" y="398.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.12%)</title><rect x="1184.5" y="371.0" width="1.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1187.5" y="382.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.12%)</title><rect x="1184.5" y="355.0" width="1.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1187.5" y="366.0"></text>
</g>
<g>
<title>outputStream::print_cr(char const*, ...) (1 samples, 0.12%)</title><rect x="1185.9" y="419.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1188.9" y="430.0"></text>
</g>
<g>
<title>outputStream::do_vsnprintf_and_write(char const*, __va_list_tag*, bool) (1 samples, 0.12%)</title><rect x="1185.9" y="403.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1188.9" y="414.0"></text>
</g>
<g>
<title>_os_semaphore_wait.cold.1 (1 samples, 0.12%)</title><rect x="1185.9" y="387.0" width="1.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1188.9" y="398.0"></text>
</g>
<g>
<title>VMThread::run() (1 samples, 0.12%)</title><rect x="1187.3" y="483.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1190.3" y="494.0"></text>
</g>
<g>
<title>VMThread::loop() (1 samples, 0.12%)</title><rect x="1187.3" y="467.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1190.3" y="478.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (1 samples, 0.12%)</title><rect x="1187.3" y="451.0" width="1.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1190.3" y="462.0"></text>
</g>
<g>
<title>SafepointSynchronize::do_cleanup_tasks() (1 samples, 0.12%)</title><rect x="1187.3" y="435.0" width="1.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1190.3" y="446.0"></text>
</g>
<g>
<title>WorkGang::run_task(AbstractGangTask*, unsigned int) (1 samples, 0.12%)</title><rect x="1187.3" y="419.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1190.3" y="430.0"></text>
</g>
<g>
<title>SemaphoreGangTaskDispatcher::coordinator_execute_on_workers(AbstractGangTask*, unsigned int) (1 samples, 0.12%)</title><rect x="1187.3" y="403.0" width="1.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1190.3" y="414.0"></text>
</g>
<g>
<title>si_module_static_file.file_vtable (1 samples, 0.12%)</title><rect x="1187.3" y="387.0" width="1.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1190.3" y="398.0"></text>
</g>
<g>
<title>WatcherThread::run() (1 samples, 0.12%)</title><rect x="1188.6" y="483.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1191.6" y="494.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (1 samples, 0.12%)</title><rect x="1188.6" y="467.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1191.6" y="478.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.12%)</title><rect x="1188.6" y="451.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1191.6" y="462.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.12%)</title><rect x="1188.6" y="435.0" width="1.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1191.6" y="446.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (1 samples, 0.12%)</title><rect x="1188.6" y="419.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1191.6" y="430.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.12%)</title><rect x="1188.6" y="403.0" width="1.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1191.6" y="414.0"></text>
</g>
</g>
</svg>
